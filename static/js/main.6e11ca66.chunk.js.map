{"version":3,"sources":["MarkdownPreviewer.js","index.js"],"names":["MarkdownPreviewer","useState","initialMd","content","setContent","renderer","marked","Renderer","Grid","container","spacing","className","item","xs","sm","htmlFor","class","id","rows","defaultValue","value","onChange","e","target","dangerouslySetInnerHTML","__html","breaks","ReactDOM","render","CssBaseline","Container","maxWidth","document","querySelector"],"mappings":"0NA+CeA,EA5CW,WACxB,MAA8BC,mBAASC,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAEMC,EAAW,IAAIC,OAAOC,SAM5B,OACE,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GAAIC,UAAU,KAAvC,UACE,eAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,UACE,wBAAOC,QAAQ,SAAf,UACE,mBAAGC,MAAM,gBADX,YAIA,+BACE,0BACEC,GAAG,SACHC,KAAK,KACLC,aAAchB,EACdiB,MAAOjB,EACPkB,SAjBW,SAACC,GACpBlB,EAAWkB,EAAEC,OAAOH,eAoBlB,eAACZ,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,UACE,wBAAOC,QAAQ,UAAf,UACE,mBAAGC,MAAM,oBADX,aAIA,qBACEC,GAAG,UACHN,UAAU,UACVa,wBAAyB,CACvBC,OAAQnB,OAAOH,EAAS,CACtBE,SAAUA,EACVqB,QAAQ,cAShBxB,EAAS,2mE,MC1CfyB,IAASC,OACP,gCACE,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,SACE,cAAC,EAAD,SAGJC,SAASC,cAAc,Y","file":"static/js/main.6e11ca66.chunk.js","sourcesContent":["import { Grid } from \"@material-ui/core\"\r\nimport { useState } from \"react\"\r\n\r\nconst MarkdownPreviewer = () => {\r\n  const [content, setContent] = useState(initialMd)\r\n\r\n  const renderer = new marked.Renderer()\r\n\r\n  const handleChange = (e) => {\r\n    setContent(e.target.value)\r\n  }\r\n\r\n  return (\r\n    <Grid container spacing={10} className=\"Md\">\r\n      <Grid item xs={12} sm={6}>\r\n        <label htmlFor=\"editor\">\r\n          <i class=\"far fa-edit\" />\r\n          Editor\r\n        </label>\r\n        <form>\r\n          <textarea\r\n            id=\"editor\"\r\n            rows=\"50\"\r\n            defaultValue={content}\r\n            value={content}\r\n            onChange={handleChange}\r\n          />\r\n        </form>\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n        <label htmlFor=\"preview\">\r\n          <i class=\"fab fa-markdown\" />\r\n          Preview\r\n        </label>\r\n        <div\r\n          id=\"preview\"\r\n          className=\"preview\"\r\n          dangerouslySetInnerHTML={{\r\n            __html: marked(content, {\r\n              renderer: renderer,\r\n              breaks: true,\r\n            }),\r\n          }}></div>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\nexport default MarkdownPreviewer\r\n\r\nconst initialMd = `It's very easy to make some words **bold** and other words *italic* with Markdown. You can even [link to Google!](http://google.com)\r\n\r\nSometimes you want numbered lists:\r\n\r\n1. One\r\n2. Two\r\n3. Three\r\n\r\nSometimes you want bullet points:\r\n\r\n* Start a line with a star\r\n* Profit!\r\n\r\nAlternatively,\r\n\r\n- Dashes work just as well\r\n- And if you have sub points, put two spaces before the dash or star:\r\n  - Like this\r\n  - And this\r\n  \r\nIf you want to embed images, this is how you do it:\r\n\r\n![Image of Yaktocat](https://octodex.github.com/images/yaktocat.png)\r\n\r\n# Structured documents\r\n\r\n## Subtopics\r\n\r\nSometimes it's useful to have different levels of headings to structure your documents. Start lines with a \\`#\\` to create headings. Multiple \\`##\\` in a row denote smaller heading sizes.\r\n\r\n### This is a third-tier heading\r\n\r\nYou can use one \\`#\\` all the way up to \\`######\\` six for different heading sizes.\r\n\r\nIf you'd like to quote someone, use the > character before the line:\r\n\r\n> Coffee. The finest organic suspension ever devised... I beat the Borg with it.\r\n> - Captain Janeway\r\n\r\nThere are many different ways to style code with GitHub's markdown. If you have inline code blocks, wrap them in backticks: \\`var example = true\\`.  If you've got a longer block of code, you can indent with four spaces:\r\n\r\n    if (isAwesome){\r\n      return true\r\n    }\r\n\r\nGitHub also supports something called code fencing, which allows for multiple lines without indentation:\r\n\r\n\\`\\`\\`\r\nif (isAwesome){\r\n  return true\r\n}\r\n\\`\\`\\`\r\n\r\nAnd if you'd like to use syntax highlighting, include the language:\r\n\r\n\\`\\`\\`javascript\r\nif (isAwesome){\r\n  return true\r\n}\r\n\\`\\`\\`\r\n\r\nGitHub supports many extras in Markdown that help you reference and link to people. If you ever want to direct a comment at someone, you can prefix their name with an @ symbol: Hey @kneath â€” love your sweater!\r\n\r\nBut I have to admit, tasks lists are my favorite:\r\n\r\n- [x] This is a complete item\r\n- [ ] This is an incomplete item\r\n\r\nWhen you include a task list in the first comment of an Issue, you will see a helpful progress bar in your list of issues. It works in Pull Requests, too!\r\n\r\nAnd, of course emoji!`\r\n","import { Box, Container } from \"@material-ui/core\"\nimport CssBaseline from \"@material-ui/core/CssBaseline\"\nimport React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport MarkdownPreviewer from \"./MarkdownPreviewer\"\nimport \"./style.css\"\n\nReactDOM.render(\n  <div>\n    <CssBaseline />\n    <Container maxWidth=\"lg\">\n      <MarkdownPreviewer />\n    </Container>\n  </div>,\n  document.querySelector(\"#root\")\n)\n"],"sourceRoot":""}